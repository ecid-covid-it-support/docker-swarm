#!/usr/bin/env bash

isInstalled()
{
    ls /usr/local/bin/ocariot  &> /dev/null
    RET_OCARIOT_COMMAND=$?

    RET_CRONTAB_COMMAND=$(crontab -u ${SUDO_USER} -l | grep -w "${MONITOR_COMMAND}")

    if [ "${RET_CRONTAB_COMMAND}" ] && [ ${RET_OCARIOT_COMMAND} = 0 ]; then
        echo "true"
        exit
    fi
    echo "false"
}

VALIDATING_OPTIONS=$(echo $@ | sed 's/ /\n/g' | grep -P "(\-\-clear).*" -v | grep '\-\-')

CHECK_CLEAR_CONFIGURATION_PARAMETER=$(echo $@ | grep -wo '\-\-clear')
CLEAR_CONFIGURATION_VALUE=$(echo $@ | grep -o -P '(?<=--clear ).*' | sed 's/--.*//g')

if [ "$EUID" -ne 0 ]
  then echo "Please run as root"
  exit
fi

if ([ "$1" != "--clear" ] && [ "$1" != "" ]) \
    || [ ${VALIDATING_OPTIONS} ] \
    || ([ ${CHECK_CLEAR_CONFIGURATION_PARAMETER} ] && [ "$(echo ${CLEAR_CONFIGURATION_VALUE} | wc -w)" != 0 ]); then

    echo -e "Illegal parameters."
    exit
fi

MONITOR_COMMAND="service_monitor.sh"

if [ $# = 1 ];then
    sudo rm -f /usr/local/bin/ocariot
    ( crontab -u ${SUDO_USER} -l | sed "/${MONITOR_COMMAND}/d"; ) | crontab -u ${SUDO_USER} -

    RET=$(! ls /usr/local/bin/ocariot  &> /dev/null && \
        crontab -u ${SUDO_USER} -l | grep -w "${MONITOR_COMMAND}")

    STATUS=$(isInstalled)
    if ! ${STATUS}; then
        echo "Uninstall realized with success!"
    else
        echo "Uninstall wasn't realized with success!"
    fi

    exit
fi

ls /usr/local/bin/ocariot &> /dev/null
if [ "$?" = "0" ];then
    echo "OCARIoT Project already installed!"
    exit
fi

INSTALL_PATH="$(realpath $0 | grep .*docker-swarm -o)"

if [ ! "$(find /usr/local/bin -maxdepth 1 -name ocariot)" ]; then
    sudo ln -s ${INSTALL_PATH}/ocariot /usr/local/bin/ocariot
    sudo chmod +x /usr/local/bin/ocariot
fi

CRONTAB_COMMAND=$(echo -e "@reboot ${INSTALL_PATH}/scripts/${MONITOR_COMMAND} >> /tmp/ocariot_monitor_service.log &")

( crontab -u ${SUDO_USER} -l; echo "${CRONTAB_COMMAND}" ) | crontab -u ${SUDO_USER} -

STATUS=$(isInstalled)
if ${STATUS}; then
    echo "OCARIoT Project was installed with success!"
else
    echo "OCARIoT Project wasn't installed with success!"
fi
